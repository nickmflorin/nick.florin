@use "partials";
@use "./typography" as typography;

.floating-content {
  > .menu {
    max-height: inherit !important;
  }
}

.menu {
  display: flex;
  flex-direction: column;
  gap: theme("spacing.1");
  overflow: hidden;
  max-height: 100%;

  > .menu__header {
    display: flex;
    flex-direction: column;
    gap: theme("spacing.1");
    padding: theme("spacing.2");
  }

  > .menu__content {
    overflow-y: auto;
    flex-grow: 100;
  }

  // The wrapping component is used to reserve space for the menu content so that loading indicators
  // or errors can be shown in the interim, before the content is either dynamically loaded or the
  // data is populated.;
  > .menu__content-wrapper {
    display: flex;
    flex-direction: column;
    overflow-y: hidden;
    flex-grow: 100;
    position: relative;

    > .menu__content {
      overflow-y: auto;
      max-height: 100%;
      height: 100%;
    }
  }
}

.menu__content {
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
  position: relative;

  // Note: Sometimes a menu__item element is wrapped in an anchor tag if it represents a link.
  .menu__item {
    display: flex;
    flex-direction: row;
    align-items: center;
    // Currently applied via Tailwind in the component.
    // padding: 6px 10px;
    gap: 10px;

    // The line height may be overridden in the component if the height is specified as a prop.
    @include typography.font($type: "text", $line-height: 28px, $font-size: "xs");

    @include partials.disabled {
      color: theme("colors.disabled");
    }

    &.menu__item--locked,
    &.menu__item--loading {
      pointer-events: none;
    }

    @include partials.hovered {
      &:not(.menu__item--selected, .disabled, .menu__item--locked) {
        background-color: theme("colors.gray.100");
      }
    }

    @include partials.focused {
      &:not(.menu__item--selected, .disabled, .menu__item--locked) {
        background-color: theme("colors.gray.100");
      }
    }

    &.menu__item--selected:not(.disabled) {
      background-color: theme("colors.blue.50");
      @include partials.hovered {
        &:not(.disabled, .menu__item--locked) {
          background-color: theme("colors.blue.100");
        }
      }
      @include partials.focused {
        &:not(.disabled, .menu__item--locked) {
          background-color: theme("colors.blue.100");
        }
      }
    }

    > .menu__item__content {
      height: 100%;
      text-align: left;
      line-height: inherit;
      flex-grow: 100;
      color: inherit;
      @include typography.truncate();
    }
  }
}
