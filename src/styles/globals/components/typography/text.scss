@use "partials";

@use "./base" as *;
@use "./mixins" as mixins;

html,
text {
  @extend %typography-base;
  font-family: theme("fontFamily.text");
  color: theme("colors.text");
  margin: 0;
}

p {
  @extend %typography-base;
  @include mixins.font("text");

  em,
  b {
    font-family: inherit;
    font-style: inherit;
    font-weight: inherit;
  }
}

.text {
  // Do not define defaults for the typography mixins.  This allows the typography properties
  // to only be applied if the component is provided with the appropriate props, and allows us to
  // override the properties in SASS elsewhere in cases where the component is not provided with
  // those props.
  @extend %typography-base;

  &:not(.span, .text--inherit) {
    /* If the <Text> component is attributed with 'span' and is inside another <Text> element, do
       not set the defaults based on the default size of the <Text> component.  We want the <Text>
       components that are attributed with 'span' to inherit typography related properties from the
       <Text> component they sit inside of, unless the <Text> component is provided with the props
       explicitly.

       Example
       -------
       <Text fontWeight="medium">
         Foo
         <Text span>Bar</Text>
       </Text>

       Here, "Bar" should be styled with the same font-weight, and other typography attributes, as
       "Foo" is.

       However, if the <Text> component that is attributed with 'span' defines an override, then it
       should be styled based on that override:

       <Text fontWeight="medium">
          Foo
          <Text span fontWeight="bold">Bar</Text>
       </Text>

       Here, "Bar" should be styled with the a "bold" font weight. */
    @include mixins.font($type: "text");
  }

  &.span,
  &.text--inherit {
    @include mixins.inherit-font-properties();
  }

  @include mixins.with-fonts("text") using ($data) {
    $font-size: partials.mapget($data, font-size);
    $line-height: partials.mapget($data, line-height);

    > .icon {
      height: $font-size;
      margin-right: 6px;
      padding-bottom: 0.5 * ($line-height - $font-size);
      padding-top: 0.5 * ($line-height - $font-size);
      width: auto;
    }
  }

  > .icon {
    color: inherit;
    font-size: inherit;
    font-style: inherit;
    font-weight: inherit;
    line-height: inherit;
  }
}
