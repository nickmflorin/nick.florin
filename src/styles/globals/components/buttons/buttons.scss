@use "sass:list";
@use "sass:map";

@use "partials";

@use "./base" as *;
@use "./constants" as constants;
@use "./mixins" as mixins;
@use "./variants" as variants;

button:not(.button) {
  &:not(.Toastify__close-button) {
    @include button-base;

    // For third-party buttons that are injected into the HTML (i.e. Clerk) we will assume they are
    // primary buttons.
    &:not(
        .cl-userButtonTrigger,
        .cl-userButtonPopoverActionButton,
        .cl-socialButtonsBlockButton,
        .mantine-Pagination-control
      ) {
      @include button("button", $size: "medium", $variant: "primary");
    }
  }
}

a:not(.button--type-link) {
  @include button-base();
  color: inherit;
  text-decoration: none;
}

@mixin inherit-properties() {
  color: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  text-align: inherit;
}

@mixin button-structure() {
  min-width: fit-content;
  overflow: hidden;
  display: flex;
  flex-direction: row;
  align-items: center;

  > .button__content {
    text-align: inherit;
    display: flex;
    flex-direction: row;
    align-items: center;
    height: 100%;
    justify-content: center;
    position: relative;
    width: 100%;
    vertical-align: middle;
    overflow: hidden;
    max-width: 100%;
    flex-grow: 100;
    gap: 8px;
    @include inherit-properties();

    > .button__sub-content {
      text-decoration: none;
      max-width: 100%;
      flex-grow: 100;
      @include partials.truncate();
      @include inherit-properties();
    }
  }
}

.button {
  /* When defining a border, we need to use the outline property - not the border property.  This
     is because a border will contribute to the size of the button, whereas an outline will not. */
  border: none;
  border-radius: constants.$button-border-radius;
  outline-offset: -1 * constants.$button-outline-width;

  @include mixins.button-locked-or-loading();

  .icon {
    aspect-ratio: 1;
    width: auto;
    color: inherit;
    filter: inherit;
  }

  &--type-button {
    @include button-properties("button");
    @include button-structure();

    justify-content: center;
    text-align: center;
  }

  &--type-link {
    @include button-properties("link");
    @include inherit-properties();

    min-width: fit-content;
    text-decoration: none;
    max-width: fit-content;
    vertical-align: baseline;

    &.link--flex {
      vertical-align: middle;
      @include button-structure();
    }
  }

  &--type-icon-button {
    @include button-properties("icon-button");
    @include button-structure();

    justify-content: center;
    text-align: center;

    aspect-ratio: 1;
    padding: 0;
  }
}
