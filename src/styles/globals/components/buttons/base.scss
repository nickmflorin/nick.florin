@use "sass:map";

@use "partials";

@use "./variants" as variants;
@use "./sizing" as sizing;
@use "./mixins" as mixins;
@use "./constants" as *;

$button-font-weights: (
  "button":
    partials.get-font-weight(
      $weight: "semibold",
    ),
  "link":
    partials.get-font-weight(
      $weight: "medium",
    ),
  "a":
    partials.get-font-weight(
      $weight: "regular",
    ),
);

@mixin button-font-weights($type) {
  font-weight: map.get($button-font-weights, $type);
  // Allow the font-weight to be overridden.
  @include partials.with-font-weights();
}

@mixin button-base() {
  @include partials.transition(none);
  @include partials.disabled;

  appearance: none;
  background-color: transparent;
  border-radius: $button-border-radius;
  box-shadow: none !important;
  box-sizing: border-box;
  cursor: pointer;
  font-stretch: normal;
  // The default font family.
  font-family: $button-font-family;
  // The default font weight.
  font-weight: $button-font-weight;
  margin: 0;
  min-height: 0px;
  -webkit-tap-highlight-color: transparent;
  text-decoration: none;
  user-select: none;
  vertical-align: middle;
}

@mixin button-structure() {
  min-width: fit-content;
  overflow: hidden;
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 0;

  > .button__content {
    display: flex;
    flex-direction: row;
    align-items: center;
    height: 100%;
    justify-content: center;
    position: relative;
    width: 100%;
    text-align: inherit;
    vertical-align: middle;
    line-height: inherit;
    font-size: inherit;
    overflow: hidden;
    max-width: 100%;
    flex-grow: 100;
    gap: 8px;

    > .button__sub-content {
      text-align: inherit;
      vertical-align: middle;
      line-height: inherit;
      font-size: inherit;
      max-width: 100%;
      flex-grow: 100;
      @include partials.truncate();
    }
  }

  .icon {
    color: inherit;
    filter: inherit;
  }
}

@mixin button-properties($type, $variant: null, $size: null, $weight: null) {
  @if $variant {
    @include variants.button-variant($type: $type, $variant: $variant);
  } @else {
    @include variants.button-variants($type);
  }
  @if $size {
    @include sizing.button-size($type, $size);
  } @else {
    @include sizing.button-sizes($type);
  }
  @if $weight {
    font-weight: partials.get-font-weight($weight: "medium");
  } @else {
    @include button-font-weights($type);
  }
}

@mixin third-party-button($type, $variant: null, $size: null, $weight: null) {
  @include button-base();
  @include button-properties($type, $variant: $variant, $size: $size, $weight: $weight);
}

@mixin button($type, $variant: null, $size: null, $weight: null) {
  @include button-base();
  @include button-structure();
  @include button-properties($type, $variant: $variant, $size: $size, $weight: $weight);
  @include partials.with-selectors((mixins.$button-locked-class, mixins.$button-loading-class)) {
    pointer-events: none;
  }
}
