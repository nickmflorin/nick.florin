@use "sass:map";

@use "partials";

@use "../typography" as typography;

@use "./variants" as variants;
@use "./sizing" as sizing;
@use "./constants" as *;
@use "./fonts" as fonts;

@mixin button-base() {
  @include partials.transition(none);
  @include partials.disabled;

  appearance: none;
  border-radius: $button-border-radius;
  box-shadow: none !important;
  box-sizing: border-box;
  cursor: pointer;
  font-stretch: normal;
  // The default font family.
  font-family: $button-font-family;
  // The default font weight.
  font-weight: typography.get-font-weight($type: "text", $weight: "medium");
  margin: 0;
  min-height: 0px;
  -webkit-tap-highlight-color: transparent;
  text-decoration: none;
  user-select: none;
  vertical-align: middle;
}

@mixin button(
  $type,
  $variant: null,
  $size: null,
  $border: false,
  $active-selector: ".button--active"
) {
  $variant: if(
    $variant,
    partials.validate-value($variant, partials.mapget($button-variants, $type)),
    partials.mapget($button-default-variant, $type)
  );
  $size: if($size, $size, $button-default-size);
  @include variants.button-variant(
    $type: $type,
    $variant: $variant,
    $border: $border,
    $active-selector: $active-selector
  );
  @include sizing.button-size($type, $size);

  @if $type != "icon-button" {
    @include fonts.button-font($type, $size: $size);
  }
}

@mixin button-properties($type, $border: false, $active-selector: ".button--active") {
  @include button-base;
  @include variants.button-variants($type, $border: $border, $active-selector: $active-selector);
  @include sizing.button-sizes($type);

  @if $type != "icon-button" {
    @include fonts.button-fonts($type);
  }
}
