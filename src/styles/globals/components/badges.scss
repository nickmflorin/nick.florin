@use "partials";
@use "./typography" as typography;

$badge-vertical-padding: 2px;

@mixin inherit-font-properties {
  line-height: inherit;
  font-size: inherit;
  font-weight: inherit;
  color: inherit;
  vertical-align: middle;
}

.badge {
  text-decoration: none;
  display: inline-flex;
  border-radius: theme("borderRadius.md");
  -webkit-tap-highlight-color: transparent;
  box-sizing: border-box;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: fit-content;
  letter-spacing: 0.0156em;
  cursor: inherit;
  overflow: hidden;
  outline: 0.0625rem solid transparent;
  padding-right: 6px;
  padding-left: 6px;
  padding-top: $badge-vertical-padding;
  padding-bottom: $badge-vertical-padding;
  font-family: typography.get-font-family("body");
  align-items: center;
  background-color: theme("colors.gray.200");
  color: theme("colors.body");

  > .badge__content {
    @include inherit-font-properties();
    display: flex;
    flex-direction: row;
    gap: 6px;
    height: 100%;
    width: 100%;
    overflow: hidden;
    align-items: center;

    > .icon {
      color: inherit;
    }

    > .badge__text {
      display: block;
      @include typography.truncate();
      @include inherit-font-properties();
    }
  }

  // Allow the font family to be overridden with a prop.
  @include typography.with-font-families();

  @include typography.with-font-sizes("body") using ($size, $data) {
    &.badge--size-#{$size} {
      $line-height: partials.mapget($data, line-height);
      $height: $line-height + 2 * $badge-vertical-padding;
      font-size: partials.mapget($data, font-size);
      line-height: $line-height;
      font-weight: partials.mapget($data, font-weight);
      height: $height;

      // Allow the font-weight to be overridden for each size.
      @include typography.with-font-weights();
      > .badge__content {
        > .badge__icon {
          height: $line-height - 4px;
          width: auto;
        }
      }
    }
  }
}

.badge-collection {
  font-family: typography.get-font-family("body");
  display: flex;
  flex-wrap: wrap;
  gap: 4px;

  @include typography.with-font-families();

  > .badge {
    font-weight: inherit;
    font-family: inherit;
  }

  @include typography.with-font-sizes("body") using ($size, $data) {
    &.badge-collection--size-#{$size} {
      $line-height: partials.mapget($data, line-height);
      $height: $line-height + 2 * $badge-vertical-padding;
      font-weight: partials.mapget($data, font-weight);

      // Allow the font-weight to be overridden for each size.
      @include typography.with-font-weights();

      > .badge {
        font-size: partials.mapget($data, font-size);
        line-height: $line-height;
        height: $height;

        > .badge__content {
          > .badge__icon {
            height: $line-height - 4px;
            width: auto;
          }
        }
      }
    }
  }
}
