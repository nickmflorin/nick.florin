@use "sass:map";

@use "partials";

@use "./radii" as radii;
@use "./typography" as typography;

$badge-vertical-padding: 2px;
$badge-horizontal-padding: 6px;

/* Each badge size directly correlates to one of the standardized font sizes in the application.
   The size of each badge is then the line-height of the text associated with that standardized
   font-size, plus the vertical padding above and below the content of the badge. */
$badge-sizes: (
  xxxs: 14px + 2 * $badge-vertical-padding,
  xxs: 14px + 2 * $badge-vertical-padding,
  xs: 16px + 2 * $badge-vertical-padding,
  sm: 18px + 2 * $badge-vertical-padding,
  smplus: 18px + 2 * $badge-vertical-padding,
  md: 20px + 2 * $badge-vertical-padding,
  lg: 22px + 2 * $badge-vertical-padding,
  xl: 24px + 2 * $badge-vertical-padding,
);

@mixin inherit-font-properties {
  line-height: inherit;
  font-size: inherit;
  font-weight: inherit;
  color: inherit;
  vertical-align: middle;
}

$badge-default-radius: theme("borderRadius.md");
$badge-default-size: "sm";

@mixin badge-size($size) {
  font-size: typography.get-font-size("body", $size);
  line-height: typography.get-line-height("body", $size);
  $height: partials.mapget($badge-sizes, $size);
  height: $height;

  > .badge__content {
    > .badge__icon {
      height: $height - 2 * $badge-vertical-padding - 4px;
      width: auto;
      aspect-ratio: 1;
    }

    > .badge__close-button {
      height: $height - 2 * $badge-vertical-padding - 2px;
      min-height: $height - 2 * $badge-vertical-padding - 2px;
      width: auto;
      padding: 0px;
      aspect-ratio: 1;
    }
  }

  // Allow the font-size to be overridden directly, independently of the height and line-height,
  // for each badge size.
  @include typography.with-font-sizes("body");
}

@mixin badge-and-tag() {
  text-decoration: none;
  display: inline-flex;
  box-sizing: border-box;
  justify-content: center;
  width: fit-content;
  cursor: inherit;
  overflow: hidden;
  align-items: center;

  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-tap-highlight-color: transparent;
}

@mixin badge-and-tag-content($prefix) {
  @include inherit-font-properties();
  display: flex;
  flex-direction: row;
  height: 100%;
  width: 100%;
  overflow: hidden;
  align-items: center;

  > .icon {
    color: inherit;
  }

  > .#{$prefix}__text {
    display: block;
    @include typography.truncate();
    @include inherit-font-properties();
  }
}

.badge {
  @include badge-and-tag();
  color: theme("colors.body");
  padding: $badge-vertical-padding $badge-horizontal-padding;
  background-color: theme("colors.gray.200");
  letter-spacing: 0.0156em;
  outline: 0.0625rem solid transparent;

  > .badge__content {
    @include badge-and-tag-content("badge");
    gap: 6px;

    > .badge__close-button {
      color: inherit;
      background-color: transparent;
    }
  }

  @include partials.border-radius($badge-default-radius);
  @include radii.with-radius() using ($radii, $value) {
    &.badge--radius-#{$radii} {
      @include partials.border-radius($value);
    }
  }

  // Allow the font weight to be overridden with a prop.
  font-weight: theme("fontWeight.medium");
  @include typography.with-font-weights();

  // Allow the font family to be overridden with a prop.
  font-family: typography.get-font-family("body");
  @include typography.with-font-families();

  @include badge-size($badge-default-size);

  @each $size in map.keys($badge-sizes) {
    &.badge--size-#{$size} {
      @include badge-size($size);
    }
  }
}

.tag {
  @include badge-and-tag();
  height: 18px;
  color: theme("colors.description");
  letter-spacing: -0.01em;

  // Allow the font weight to be overridden with a prop.
  font-weight: theme("fontWeight.medium");
  @include typography.with-font-weights();

  // Allow the font family to be overridden with a prop.
  font-family: typography.get-font-family("label");
  @include typography.with-font-families();

  @include typography.with-font-transforms();
  @include typography.with-font-sizes("label");

  > .tag__content {
    @include badge-and-tag-content("tag");
    gap: 4px;
  }
}

.badge-collection {
  font-family: typography.get-font-family("body");
  display: flex;
  flex-direction: column;
  gap: 6px;

  @include typography.with-font-families();

  .badge-collection__badges {
    display: flex;
    flex-wrap: wrap;
    gap: 4px;

    .badge {
      font-weight: inherit;
      font-family: inherit;
    }
  }

  @include typography.use-fonts("body") using ($size, $data) {
    &.badge-collection--size-#{$size} {
      $height: partials.mapget($badge-sizes, $size);
      font-weight: partials.mapget($data, font-weight);

      // Allow the font-weight to be overridden for each size.
      @include typography.with-font-weights();

      .badge-collection__badges {
        .badge {
          @include badge-size($size);
        }
      }
    }
  }
}
