export const GITHUB_BASE_URL = "https://api.github.com" as const;
export type GithubBaseUrl = typeof GITHUB_BASE_URL;

export type GithubRepo<U extends string = string, N extends string = string> = {
  id: number;
  node_id: string;
  name: N;
  full_name: `${U}/${N}`;
  private: boolean;
  owner: {
    login: U;
    id: number;
    node_id: string;
    avatar_url: string;
    gravatar_id: string;
    url: `https://api.github.com/users/${U}`;
    html_url: `https://github.com/${U}`;
    followers_url: `${GithubBaseUrl}/users/${U}/followers`;
    following_url: `${GithubBaseUrl}/users/${U}/following{/other_user}`;
    gists_url: `${GithubBaseUrl}/users/${U}/gists{/gist_id}`;
    starred_url: `${GithubBaseUrl}/users/${U}/starred{/owner}{/repo}`;
    subscriptions_url: `${GithubBaseUrl}/users/${U}/subscriptions`;
    organizations_url: `${GithubBaseUrl}/users/${U}/orgs`;
    repos_url: `${GithubBaseUrl}/users/${U}/repos`;
    events_url: `${GithubBaseUrl}/users/${U}/events{/privacy}`;
    received_events_url: `${GithubBaseUrl}/users/${U}/received_events`;
    type: "User";
    site_admin: boolean;
  };
  html_url: `https://github.com/${U}/${N}`;
  description: string;
  fork: false;
  url: `${GithubBaseUrl}/repos/${U}/${N}`;
  forks_url: `${GithubBaseUrl}/repos/${U}/${N}/forks`;
  keys_url: `${GithubBaseUrl}/repos/${U}/${N}/keys{/key_id}`;
  collaborators_url: `${GithubBaseUrl}/repos/${U}/${N}/collaborators{/collaborator}`;
  teams_url: `${GithubBaseUrl}/repos/${U}/${N}/teams`;
  hooks_url: `${GithubBaseUrl}/repos/${U}/${N}/hooks`;
  issue_events_url: `${GithubBaseUrl}/repos/${U}/${N}/issues/events{/number}`;
  events_url: `${GithubBaseUrl}/repos/${U}/${N}/events`;
  assignees_url: `${GithubBaseUrl}/repos/${U}/${N}/assignees{/user}`;
  branches_url: `${GithubBaseUrl}/repos/${U}/${N}/branches{/branch}`;
  tags_url: `${GithubBaseUrl}/repos/${U}/${N}/tags`;
  blobs_url: `${GithubBaseUrl}/repos/${U}/${N}/git/blobs{/sha}`;
  git_tags_url: `${GithubBaseUrl}/repos/${U}/${N}/git/tags{/sha}`;
  git_refs_url: `${GithubBaseUrl}/repos/${U}/${N}/git/refs{/sha}`;
  trees_url: `${GithubBaseUrl}/repos/${U}/${N}/git/trees{/sha}`;
  statuses_url: `${GithubBaseUrl}/repos/${U}/${N}/statuses/{sha}`;
  languages_url: `${GithubBaseUrl}/repos/${U}/${N}/languages`;
  stargazers_url: `${GithubBaseUrl}/repos/${U}/${N}/stargazers`;
  contributors_url: `${GithubBaseUrl}/repos/${U}/${N}/contributors`;
  subscribers_url: `${GithubBaseUrl}/repos/${U}/${N}/subscribers`;
  subscription_url: `${GithubBaseUrl}/repos/${U}/${N}/subscription`;
  commits_url: `${GithubBaseUrl}/repos/${U}/${N}/commits{/sha}`;
  git_commits_url: `${GithubBaseUrl}/repos/${U}/${N}/git/commits{/sha}`;
  comments_url: `${GithubBaseUrl}/repos/${U}/${N}/comments{/number}`;
  issue_comment_url: `${GithubBaseUrl}/repos/${U}/${N}/issues/comments{/number}`;
  contents_url: `${GithubBaseUrl}/repos/${U}/${N}/contents/{+path}`;
  compare_url: `${GithubBaseUrl}/repos/${U}/${N}/compare/{base}...{head}`;
  merges_url: `${GithubBaseUrl}/repos/${U}/${N}/merges`;
  archive_url: `${GithubBaseUrl}/repos/${U}/${N}/{archive_format}{/ref}`;
  downloads_url: `${GithubBaseUrl}/repos/${U}/${N}/downloads`;
  issues_url: `${GithubBaseUrl}/repos/${U}/${N}/issues{/number}`;
  pulls_url: `${GithubBaseUrl}/repos/${U}/${N}/pulls{/number}`;
  milestones_url: `${GithubBaseUrl}/repos/${U}/${N}/milestones{/number}`;
  notifications_url: `${GithubBaseUrl}/repos/${U}/${N}/notifications{?since;all;participating}`;
  labels_url: `${GithubBaseUrl}/repos/${U}/${N}/labels{/name}`;
  releases_url: `${GithubBaseUrl}/repos/${U}/${N}/releases{/id}`;
  deployments_url: `${GithubBaseUrl}/repos/${U}/${N}/deployments`;
  created_at: string;
  updated_at: string;
  pushed_at: string;
  git_url: `git://github.com/${U}/${N}.git`;
  ssh_url: `git@github.com:${U}/${N}.git`;
  clone_url: `https://github.com/${U}/${N}.git`;
  svn_url: `https://github.com/${U}/${N}`;
  homepage: null;
  size: number;
  stargazers_count: number;
  watchers_count: number;
  language: string;
  has_issues: boolean;
  has_projects: boolean;
  has_downloads: boolean;
  has_wiki: boolean;
  has_pages: boolean;
  has_discussions: boolean;
  forks_count: number;
  mirror_url: null;
  archived: boolean;
  disabled: boolean;
  open_issues_count: number;
  license: null;
  allow_forking: boolean;
  is_template: boolean;
  web_commit_signoff_required: boolean;
  topics: [];
  visibility: "public";
  forks: number;
  open_issues: number;
  watchers: number;
  default_branch: string;
};
